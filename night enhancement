import cv2
import numpy as np
from matplotlib import pyplot as plt
import os
from tqdm import tqdm

# Path to the folder containing images
folder_path = r"C:\Users\91981\Desktop\OnePlus_Photo\Night_images"
output_path = r'C:\Users\91981\Desktop\OnePlus_Photo\Night_images_enhanced'

# Get a list of all the image files in the folder
image_files = [f for f in os.listdir(folder_path) if f.endswith(('.png', '.jpg', '.jpeg', '.bmp'))]
total_images = len(image_files)

# Define a function for image resizing
def resize_image(img, size=(812, 612)):
    return cv2.resize(img, size)

# Define a function for image sharpening
def sharpen_image(img):
    kernel = np.array([[0, -7, 0], [-7, 10, -7], [0, -7, 0]])
    img = cv2.bilateralFilter(img, 2, 8, 8)
    gaussian_blur = cv2.GaussianBlur(img, (3, 3), 2)
    return cv2.addWeighted(img, 1, gaussian_blur, -0.5, 0)

# Define a function for brightness adjustment
def adjust_brightness(img, value=6):
    matrix = np.ones(img.shape, dtype="uint8") * value
    return cv2.add(img, matrix)

# Define a function for contrast adjustment
def adjust_contrast(img, factor=1.5):
    matrix1 = np.ones(img.shape) * factor
    return np.uint8(np.clip(cv2.multiply(np.float64(img), matrix1), 0, 255))

# Define a function for histogram equalization
def hist_eq(img):
    r, g, b = cv2.split(img)
    eq_r = cv2.equalizeHist(r)
    eq_g = cv2.equalizeHist(g)
    eq_b = cv2.equalizeHist(b)
    return cv2.merge((eq_r, eq_g, eq_b))

# Define a function for saturation adjustment
def adjust_saturation(img, factor=1.7):
    hsv_img = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    hsv_img[..., 1] = np.uint8(np.clip(hsv_img[..., 1] * factor, 20, 150))
    return cv2.cvtColor(hsv_img, cv2.COLOR_HSV2BGR)

# Define the main function to enhance night images
def enhance_night_images():
    if not os.path.exists(output_path):
        os.makedirs(output_path)

    with tqdm(total=total_images, desc="Processing images") as pbar:
        for i, file_name in enumerate(image_files):
            try:
                img_path = os.path.join(folder_path, file_name)
                img = cv2.imread(img_path)
                if img is None:
                    print(f"Warning: Unable to read {file_name}")
                    continue

                img = resize_image(img)
                img = sharpen_image(img)
                img = adjust_brightness(img)
                img = adjust_contrast(img)
                img = hist_eq(img)
                img = adjust_saturation(img)

                out_path = os.path.join(output_path, file_name)
                cv2.imwrite(out_path, img)

                pbar.update(1)
                pbar.set_postfix_str("{:.1f}%".format((i+1)/total_images*100))
            except Exception as e:
                print(f"Error processing {file_name}: {e}")

# Calling the function for low light enhancement
enhance_night_images()
